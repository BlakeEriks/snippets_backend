generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Snippet {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @unique
  meta      String
  content   String
  source    Source   @relation(fields: [sourceId], references: [id])
  sourceId  Int
  quotee    String? // Default to book author
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  tags      Tag[]
  deleted   Boolean  @default(false)
  staged    Boolean  @default(false)
}

model Source {
  id       Int       @id @default(autoincrement())
  string   String    @unique
  book     Book      @relation(fields: [bookId], references: [id])
  bookId   Int       @unique
  snippets Snippet[]
}

model User {
  id       Int       @id @default(autoincrement())
  name     String
  quotes   Quote[]
  snippets Snippet[]
}

model Book {
  id       Int     @id @default(autoincrement())
  title    String  @unique
  author   Author  @relation(fields: [authorId], references: [id])
  authorId Int
  quotes   Quote[]
  source   Source?
  sourceId Int?
}

model Author {
  id    Int    @id @default(autoincrement())
  name  String @unique
  books Book[]
}

model Quote {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @unique
  source    Book?    @relation(fields: [sourceId], references: [id])
  sourceId  Int?
  content   String
  quotee    String? // Default to book author
  meta      String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  tags      Tag[]

  // createdAt DateTime @default(now())
  // updatedAt DateTime @updatedAt
  // published Boolean  @default(false)
  // viewCount Int      @default(0)
  // author    User?    @relation(fields: [authorId], references: [id])
  // authorId  Int?
}

model Tag {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  quotes   Quote[]
  snippets Snippet[]
}
